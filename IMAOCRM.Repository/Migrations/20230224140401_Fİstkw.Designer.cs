// <auto-generated />
using System;
using IMAOCRM.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMAOCRM.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230224140401_Fİstkw")]
    partial class Fİstkw
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IMAOCMS.Core.Entites.Com48", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaudRate")
                        .HasColumnType("int");

                    b.Property<int>("BytesToRead")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<int>("DataBits")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleterId")
                        .HasColumnType("int");

                    b.Property<int>("DevAddr")
                        .HasColumnType("int");

                    b.Property<string>("HexString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBackground")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<double>("Laohuaintval")
                        .HasColumnType("float");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("Num1")
                        .HasColumnType("int");

                    b.Property<int>("Num2")
                        .HasColumnType("int");

                    b.Property<int>("Num3")
                        .HasColumnType("int");

                    b.Property<byte>("NumArray")
                        .HasColumnType("tinyint");

                    b.Property<int>("OutCount")
                        .HasColumnType("int");

                    b.Property<int>("Parity")
                        .HasColumnType("int");

                    b.Property<string>("PortName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Readinterval")
                        .HasColumnType("float");

                    b.Property<string>("Sources")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StopBits")
                        .HasColumnType("int");

                    b.Property<string>("Str1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Str2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("ToHexByte")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.Property<double>("Xunhuaintval")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Com48s");
                });

            modelBuilder.Entity("IMAOCMS.Core.Entites.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeleterId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdaterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cossss");
                });
#pragma warning restore 612, 618
        }
    }
}
